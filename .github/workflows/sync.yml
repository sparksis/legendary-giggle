name: Scheduled Recording Sync

on:
  schedule:
    # Runs at the top of every hour.
    - cron: '0 * * * *'
  workflow_dispatch:
    # Allows for manual triggering of the workflow from the Actions tab.

jobs:
  sync-recordings:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create config.ini from Secrets
        run: |
          echo "[voipms]" > config.ini
          echo "username = ${{ secrets.VOIPMS_USERNAME }}" >> config.ini
          echo "password = ${{ secrets.VOIPMS_PASSWORD }}" >> config.ini
          echo "[paths]" >> config.ini
          echo "download_dir = ./recordings" >> config.ini
          echo "state_file = ./state.json" >> config.ini
        # IMPORTANT: For this workflow to run, you must configure the following secrets
        # in your repository's Settings > Secrets and variables > Actions:
        # 1. VOIPMS_USERNAME
        # 2. VOIPMS_PASSWORD

      - name: Run the synchronization script
        run: python sync_recordings.py

      - name: Commit and push updated state and recordings
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # Add all new recordings and the updated state file
          git add recordings/ state.json
          # Check if there are any changes to commit
          if git diff-index --quiet HEAD; then
            echo "No new recordings or state changes to commit."
          else
            git commit -m "chore: Sync new recordings and update state"
            git push
          fi
